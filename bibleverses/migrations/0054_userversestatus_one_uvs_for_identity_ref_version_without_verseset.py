# Generated by Django 3.2.9 on 2022-08-15 20:03

from django.db import migrations, models


def forwards(apps, schema_editor):
    UserVerseStatus = apps.get_model("bibleverses", "UserVerseStatus")
    connection = schema_editor.connection
    cursor = connection.cursor()
    cursor.execute(
        "select for_identity_id, localized_reference, version_id from bibleverses_userversestatus where verse_set_id is null group by for_identity_id, localized_reference, version_id having count(id) > 1;"
    )
    to_fix = list(cursor.fetchall())
    for for_identity_id, localized_reference, version_id in to_fix:
        uvss = UserVerseStatus.objects.filter(
            for_identity_id=for_identity_id,
            localized_reference=localized_reference,
            version_id=version_id,
        ).order_by("added")
        to_keep, *others = uvss
        print(f"Fixing {to_keep.id}: {to_keep.localized_reference}")
        for other in others:
            print(
                f"  Deleting {other.id}, timedelta={other.added - to_keep.added}, strengthdelta={other.strength - to_keep.strength}"
            )
            other.delete()


def backwards(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ("bibleverses", "0053_auto_20211125_1154"),
    ]

    operations = [
        migrations.RunPython(forwards, backwards),
        migrations.AddConstraint(
            model_name="userversestatus",
            constraint=models.UniqueConstraint(
                condition=models.Q(("verse_set__isnull", True)),
                fields=("for_identity", "localized_reference", "version"),
                name="one_UVS_for_identity_ref_version_without_verseset",
            ),
        ),
    ]
